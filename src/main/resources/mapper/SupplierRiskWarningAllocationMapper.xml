<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhongwang.data.dao.SupplierRiskWarningAllocationMapper" >
  <resultMap id="BaseResultMap" type="com.zhongwang.data.entity.SupplierRiskWarningAllocation" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uuid" property="uuid" jdbcType="VARCHAR" />
    <result column="company_id" property="companyId" jdbcType="VARCHAR" />
    <result column="supplier_id" property="supplierId" jdbcType="VARCHAR" />
    <result column="warning_events" property="warningEvents" jdbcType="VARCHAR" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="low_grade" property="lowGrade" jdbcType="VARCHAR" />
    <result column="high_grade" property="highGrade" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, uuid, company_id, supplier_id, warning_events, add_time, update_time, low_grade, 
    high_grade, status
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from supplier_risk_warning_allocation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from supplier_risk_warning_allocation
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.zhongwang.data.entity.SupplierRiskWarningAllocation" >
    insert into supplier_risk_warning_allocation (id, uuid, company_id, 
      supplier_id, warning_events, add_time, 
      update_time, low_grade, high_grade, 
      status)
    values (#{id,jdbcType=INTEGER}, #{uuid,jdbcType=VARCHAR}, #{companyId,jdbcType=VARCHAR}, 
      #{supplierId,jdbcType=VARCHAR}, #{warningEvents,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{lowGrade,jdbcType=VARCHAR}, #{highGrade,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zhongwang.data.entity.SupplierRiskWarningAllocation" >
    insert into supplier_risk_warning_allocation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uuid != null" >
        uuid,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="supplierId != null" >
        supplier_id,
      </if>
      <if test="warningEvents != null" >
        warning_events,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="lowGrade != null" >
        low_grade,
      </if>
      <if test="highGrade != null" >
        high_grade,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uuid != null" >
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null" >
        #{supplierId,jdbcType=VARCHAR},
      </if>
      <if test="warningEvents != null" >
        #{warningEvents,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lowGrade != null" >
        #{lowGrade,jdbcType=VARCHAR},
      </if>
      <if test="highGrade != null" >
        #{highGrade,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>



  <update id="updateByPrimaryKeySelective" parameterType="com.zhongwang.data.entity.SupplierRiskWarningAllocation" >
    update supplier_risk_warning_allocation
    <set >
      <if test="uuid != null" >
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null" >
        supplier_id = #{supplierId,jdbcType=VARCHAR},
      </if>
      <if test="warningEvents != null" >
        warning_events = #{warningEvents,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lowGrade != null" >
        low_grade = #{lowGrade,jdbcType=VARCHAR},
      </if>
      <if test="highGrade != null" >
        high_grade = #{highGrade,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhongwang.data.entity.SupplierRiskWarningAllocation" >
    update supplier_risk_warning_allocation
    set uuid = #{uuid,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=VARCHAR},
      supplier_id = #{supplierId,jdbcType=VARCHAR},
      warning_events = #{warningEvents,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      low_grade = #{lowGrade,jdbcType=VARCHAR},
      high_grade = #{highGrade,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>